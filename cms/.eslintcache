[{"/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/index.js":"1","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/App.js":"2","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/reportWebVitals.js":"3","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Sidebar/Sidebar.js":"4","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Sidebar/Navigation.js":"5","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/userSign/Register.js":"6","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/userSign/Login.js":"7","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Dashboard/Dashboard.js":"8","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Table/Table.js":"9","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Table/TableHead.js":"10","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Table/TableBody.js":"11","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Forms/CreateEvent.js":"12","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Forms/EditEvent.js":"13","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Modals/DeleteConfirmation.js":"14","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Details/EventDetail.js":"15","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/MyEvent/MyEvent.js":"16","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/MyEvent/TableEvent.js":"17","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Banner/Banner.js":"18","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Forms/AddBanner.js":"19","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Forms/EditBanner.js":"20","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Banner/BannerList.js":"21","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Alert/Alert.js":"22","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/store/actions.js":"23","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/store/index.js":"24","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/store/reducers/banners.js":"25","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/store/reducers/events.js":"26","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/hooks/ApiRequest.js":"27","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Forms/NewEventType.js":"28","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Modals/Loader.js":"29","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Modals/DeleteBannerConfirmation.js":"30"},{"size":705,"mtime":1611636515873,"results":"31","hashOfConfig":"32"},{"size":2086,"mtime":1611661391398,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":1611284821676,"results":"34","hashOfConfig":"32"},{"size":2124,"mtime":1611655651073,"results":"35","hashOfConfig":"32"},{"size":2088,"mtime":1611661517978,"results":"36","hashOfConfig":"32"},{"size":9198,"mtime":1611680878403,"results":"37","hashOfConfig":"32"},{"size":5975,"mtime":1611681549296,"results":"38","hashOfConfig":"32"},{"size":9448,"mtime":1611693113649,"results":"39","hashOfConfig":"32"},{"size":3113,"mtime":1611395761499,"results":"40","hashOfConfig":"32"},{"size":398,"mtime":1611352645140,"results":"41","hashOfConfig":"32"},{"size":4972,"mtime":1611667604145,"results":"42","hashOfConfig":"32"},{"size":24362,"mtime":1611682391653,"results":"43","hashOfConfig":"32"},{"size":26802,"mtime":1611503837277,"results":"44","hashOfConfig":"32"},{"size":2555,"mtime":1611683019514,"results":"45","hashOfConfig":"32"},{"size":5748,"mtime":1611716936342,"results":"46","hashOfConfig":"32"},{"size":6243,"mtime":1611682081760,"results":"47","hashOfConfig":"32"},{"size":2240,"mtime":1611673723139,"results":"48","hashOfConfig":"32"},{"size":4216,"mtime":1611696365913,"results":"49","hashOfConfig":"32"},{"size":6604,"mtime":1611693431983,"results":"50","hashOfConfig":"32"},{"size":6380,"mtime":1611695775663,"results":"51","hashOfConfig":"32"},{"size":1946,"mtime":1611696099896,"results":"52","hashOfConfig":"32"},{"size":2045,"mtime":1611613566970,"results":"53","hashOfConfig":"32"},{"size":2508,"mtime":1611696393877,"results":"54","hashOfConfig":"32"},{"size":354,"mtime":1611615903955,"results":"55","hashOfConfig":"32"},{"size":360,"mtime":1611692859356,"results":"56","hashOfConfig":"32"},{"size":602,"mtime":1611675831272,"results":"57","hashOfConfig":"32"},{"size":2508,"mtime":1611717093415,"results":"58","hashOfConfig":"32"},{"size":3793,"mtime":1611655242999,"results":"59","hashOfConfig":"32"},{"size":284,"mtime":1611662066345,"results":"60","hashOfConfig":"32"},{"size":2473,"mtime":1611696013603,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"15iyk0i",{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/index.js",[],["130","131"],"/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/App.js",["132"],"import {\n  Switch,\n  Route\n} from 'react-router-dom';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Login from './components/userSign/Login';\nimport Register from './components/userSign/Register';\nimport EventDetail from './components/Details/EventDetail';\nimport MyEvent from './components/MyEvent/MyEvent';\nimport Banner from './components/Banner/Banner';\nimport {useEffect, useState} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport {useDispatch} from 'react-redux'\nimport {fetchEventsType} from './store/actions'\n\n\ntoast.configure();\nfunction App() {\n  const dispatch = useDispatch();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const history = useHistory();\n\n  useEffect(()=>{\n    dispatch(fetchEventsType());\n  }, [])\n\n  useEffect(()=>{\n\n  })\n\n  useEffect(()=>{\n    if(localStorage.getItem('access_token')){\n      setLoggedIn(true);\n    }else {\n      history.push('/login');\n    }\n  }, [loggedIn, history]);\n  return (\n    <div className=\"app\">\n      <div className=\"flex flex-row\">\n        <Sidebar loggedIn={loggedIn} setLoggedIn={setLoggedIn}/>\n        <Switch>\n          <Route exact path=\"/\">\n            <Dashboard loggedIn={loggedIn} setLoggedIn={setLoggedIn}/>\n          </Route>\n          <Route path=\"/detail/:id\" loggedIn={loggedIn} setLoggedIn={setLoggedIn}>\n            <EventDetail />\n          </Route>\n          <Route exact path=\"/event\">\n            <MyEvent loggedIn={loggedIn} setLoggedIn={setLoggedIn}/>\n          </Route>\n          <Route exact path=\"/banner\">\n            <Banner loggedIn={loggedIn} setLoggedIn={setLoggedIn}/>\n          </Route>\n          <Route exact path=\"/login\">\n            <Login loggedIn={loggedIn} setLoggedIn={setLoggedIn}/>\n          </Route>\n          <Route exact path=\"/register\">   \n            <Register loggedIn={loggedIn} setLoggedIn={setLoggedIn}/>\n          </Route>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/reportWebVitals.js",[],"/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Sidebar/Sidebar.js",[],"/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Sidebar/Navigation.js",[],"/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/userSign/Register.js",[],"/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/userSign/Login.js",[],"/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Dashboard/Dashboard.js",["133"],"import TableEvent from '../MyEvent/TableEvent';\nimport {useState, useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {useHistory} from 'react-router-dom';\nimport CreateEvent from '../Forms/CreateEvent';\nimport Loader from '../Modals/Loader';\nimport { fetchEventsByStatus } from '../../store/actions';\n\n\n\nfunction Dashboard ({loggedIn}) {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  useEffect(()=>{\n    if(!loggedIn){\n      history.push('/login');\n    }\n  }, [loggedIn, history]);\n\n  useEffect(()=>{\n    dispatch(fetchEventsByStatus());\n  }, [])\n\n  const loading = useSelector(state => state.eventReducer.loading);\n  const myEvent = useSelector(state => state.eventReducer.eventsByStatus);\n  const [selectedEvents, setSelectedEvents] = useState(null);\n  function handleSelectedEvents (selected) {\n    if(selectedEvents === selected) {\n      setSelectedEvents(null);\n    } else {\n      setSelectedEvents(selected)\n    }\n  }\n  function renderSelected (selectedStatus) {\n    for(let i = 0; i < myEvent.length; i++){\n      if(myEvent[i].name === selectedStatus){\n        const listSelected = [myEvent[i]]\n        return (\n          <div className=\"flex-grow overflow-auto\">\n            <TableEvent \n              myEvent={listSelected}/>\n          </div>\n        )\n      }\n    }\n    return (\n      <div className=\"flex-grow overflow-auto\">\n        <TableEvent \n          myEvent={myEvent}/>\n      </div>\n    )\n  }\n\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  function handleCreateForm(){\n    setShowCreateForm(!showCreateForm);\n  }\n  console.log(myEvent);\n  if(loading) {\n    return (\n      <div className=\"flex flex-col h-screen w-4/5 bg-gray-900\">\n        <Loader />\n      </div>\n    )\n  } \n  else {\n    return (\n      <div className=\"flex flex-col h-screen w-4/5 bg-gray-900\">\n        <div className=\"flex flex-row justify-between\">\n          <div className=\"flex\">\n            <div className=\"m-3\">\n              <button \n                className=\"bg-white text-gray-800 font-bold focus:outline-none rounded border-b-2 border-indigo-500 hover:border-indigo-600 hover:bg-indigo-500 hover:text-white shadow-md py-2 px-6 inline-flex items-center\"\n                onClick={(e)=>{\n                  e.preventDefault();\n                  handleSelectedEvents('active')\n                }}\n                >\n                <span className=\"mr-2\">Ongoing</span>\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5.636 18.364a9 9 0 010-12.728m12.728 0a9 9 0 010 12.728m-9.9-2.829a5 5 0 010-7.07m7.072 0a5 5 0 010 7.07M13 12a1 1 0 11-2 0 1 1 0 012 0z\"></path>\n                </svg>\n              </button>\n            </div>\n            <div className=\"m-3\">\n              <button \n                className=\"bg-white text-gray-800 font-bold focus:outline-none rounded border-b-2 border-indigo-500 hover:border-indigo-600 hover:bg-indigo-500 hover:text-white shadow-md py-2 px-6 inline-flex items-center\"\n                onClick={(e)=>{\n                  e.preventDefault();\n                  handleSelectedEvents('non-active')\n                }}\n                >\n                <span className=\"mr-2\">Finished</span>\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M18.364 5.636a9 9 0 010 12.728m0 0l-2.829-2.829m2.829 2.829L21 21M15.536 8.464a5 5 0 010 7.072m0 0l-2.829-2.829m-4.243 2.829a4.978 4.978 0 01-1.414-2.83m-1.414 5.658a9 9 0 01-2.167-9.238m7.824 2.167a1 1 0 111.414 1.414m-1.414-1.414L3 3m8.293 8.293l1.414 1.414\"></path>\n                </svg>\n              </button>\n            </div>\n            <div className=\"m-3\">\n              <button \n                className=\"bg-white text-gray-800 font-bold focus:outline-none rounded border-b-2 border-indigo-500 hover:border-indigo-600 hover:bg-indigo-500 hover:text-white shadow-md py-2 px-6 inline-flex items-center\"\n                onClick={(e)=>{\n                  e.preventDefault();\n                  handleSelectedEvents('cancelled')\n                }}\n                >\n                <span className=\"mr-2\">Canceled</span>\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 10a1 1 0 011-1h4a1 1 0 011 1v4a1 1 0 01-1 1h-4a1 1 0 01-1-1v-4z\"></path>\n                </svg>\n              </button>\n            </div>\n          </div>\n          <div className=\"flex\">\n            <div className=\"m-3\">\n              <button \n                className=\"bg-white text-gray-800 font-bold focus:outline-none rounded border-b-2 border-indigo-500 hover:border-indigo-600 hover:bg-indigo-500 hover:text-white shadow-md py-2 px-6 inline-flex items-center\"\n                onClick={(e)=>{\n                  e.preventDefault();\n                  handleCreateForm();\n                }}\n                >\n                <span className=\"mr-2\">Create New Event</span>\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n        {myEvent.length ? renderSelected(selectedEvents) : ''}\n        {\n          showCreateForm ? \n          <div className=\"bg-black bg-opacity-50 absolute inset-0 flex justify-center items center\">\n            <CreateEvent handleCreateForm={handleCreateForm}/>\n          </div> : ''\n        }\n      </div>\n    )\n  }\n}\n\nexport default Dashboard;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import Table from '../Table/Table'\n// import TableEvent from '../MyEvent/TableEvent'\n// import {useState, useEffect} from 'react'\n// import CreateEvent from '../Forms/CreateEvent'\n// import NewEventType from '../Forms/NewEventType'\n\n// import {useHistory} from 'react-router-dom'\n// function Dashboard ({loggedIn}) {\n//   const history = useHistory();\n//   useEffect(()=>{\n//     if(!loggedIn){\n//       history.push('/login');\n//     }\n//   }, [loggedIn, history]);\n\n//   const [showCreateForm, setShowCreateForm] = useState(false);\n//   function handleCreateForm(){\n//     setShowCreateForm(!showCreateForm);\n//   }\n\n//   const [showAddNewType, setShowAddNewType] = useState(false);\n//   function handleAddNewType(){\n//     setShowAddNewType(!showAddNewType);\n//   }\n\n//   return (\n//     <div className=\"flex flex-col h-screen w-4/5 bg-gray-900\">\n//       <div className=\"flex justify-end\">\n//         <div className=\"m-3\">\n//           <button \n//             className=\"bg-white text-gray-800 font-bold focus:outline-none rounded border-b-2 border-indigo-500 hover:border-indigo-600 hover:bg-indigo-500 hover:text-white shadow-md py-2 px-6 inline-flex items-center\"\n//             onClick={(e)=>{\n//               e.preventDefault();\n//               handleCreateForm();\n//             }}\n//             >\n//             <span className=\"mr-2\">Create New Event</span>\n//             <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n//               <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n//             </svg>\n//           </button>\n//           {\n//             localStorage.getItem('isAdmin') === 'true' ?\n//             <button \n//               className=\"ml-2 bg-white text-gray-800 font-bold focus:outline-none rounded border-b-2 border-indigo-500 hover:border-indigo-600 hover:bg-indigo-500 hover:text-white shadow-md py-2 px-6 inline-flex items-center\"\n//               onClick={(e)=>{\n//                 e.preventDefault();\n//                 handleAddNewType();\n//               }}\n//               >\n//               <span className=\"mr-2\">Add New Event Type</span>\n//               <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n//                 <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n//               </svg>\n//             </button> : ''\n//           }\n//          </div>\n//       </div>\n//       <div className=\"flex-grow overflow-auto\">\n//         <TableEvent />\n//       </div>\n//       {\n//         showCreateForm ? \n//         <div className=\"bg-black bg-opacity-50 absolute inset-0 flex justify-center items center\">\n//           <CreateEvent handleCreateForm={handleCreateForm}/>\n//         </div> : ''\n//       }\n//       {\n//         showAddNewType ? \n//         <div className=\"bg-black bg-opacity-50 absolute inset-0 flex justify-center items center\">\n//           <NewEventType handleAddNewType={handleAddNewType}/>\n//         </div> : ''\n//       }\n//     </div>\n//   )\n// }\n\n// export default Dashboard;","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Table/Table.js",["134"],"import TableHead from './TableHead'\nimport TableBody from './TableBody'\nimport {useState} from 'react';\nimport EditEvent from '../Forms/EditEvent'\nimport DeleteConfirmation from '../Modals/DeleteConfirmation';\n\nfunction Table () {\n  const [showEditForm, setShowEditForm] = useState(false);\n  const [toEdit, setToEdit] = useState(null);\n  function handleEditForm(value = null){\n    setShowEditForm(!showEditForm);\n    setToEdit(value);\n  }\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [toDelete, setToDelete] = useState(null);\n  function handleDelete(value = null){\n    setShowDeleteModal(!showDeleteModal);\n    setToDelete(value);\n  }\n  const [organizer, setOrganizer] = useState([\n    {\n      id: 1,\n      organizerName: \"Balakutak\",\n      organizerEvent: [\n        {\n          id: 1,\n          eventName: \"Balakutakutako\",\n          eventDate: \"29-19-1986\"\n        },\n        {\n          id: 2,\n          eventName: \"Dung tak tak dung\",\n          eventDate: \"29-19-1986\"\n        },\n        {\n          id: 3,\n          eventName: \"dot dot jeng\",\n          eventDate: \"29-19-1986\"\n        },\n      ]\n    },\n    {\n      id: 2,\n      organizerName: \"Dorongdot Congcot\",\n      organizerEvent: [\n        {\n          id: 4,\n          eventName: \"maklupalapelo\",\n          eventDate: \"31-2-1986\"\n        }\n      ]\n    },\n    {\n      id: 3,\n      organizerName: \"tulak tulik\",\n      organizerEvent: [\n        {\n          id: 5,\n          eventName: \"Heuy hae hae \",\n          eventDate: \"29-19-1986\"\n        },\n        {\n          id: 6,\n          eventName: \"Grogokmuepa\",\n          eventDate: \"29-19-1986\"\n        },\n        {\n          id: 7,\n          eventName: \"Sokolokogonapago\",\n          eventDate: \"29-19-1986\"\n        },\n        {\n          id: 8,\n          eventName: \"Dulare pai po puliripa\",\n          eventDate: \"29-19-1986\"\n        }\n      ]\n    }\n  ])\n  return (\n    <>\n    <table className=\"relative w-full\">\n      {\n        organizer.map(organize => {\n          return (\n            <>\n            <TableHead key={organize.id} organizerName={organize.organizerName}/>\n            <tbody className=\"divide-y bg-gray-100\">\n              {\n                organize.organizerEvent.map(event => {\n                  return (\n                    <TableBody \n                      key={event.id} \n                      event={event} \n                      handleEditForm={handleEditForm} \n                      handleDelete={handleDelete}\n                    />\n                  )\n                })\n              }\n            </tbody>\n            </>\n          )\n        })\n      }\n    </table>\n    {\n      showEditForm ? \n      <div className=\"bg-black bg-opacity-50 absolute inset-0 flex justify-center items center\">\n        <EditEvent handleEditForm={handleEditForm} populateData={toEdit}/>\n      </div> : ''\n    }\n    {\n      showDeleteModal ?\n      <div className=\"bg-black bg-opacity-50 absolute inset-0 flex justify-center items center\">\n        <DeleteConfirmation handleDelete={handleDelete} id={toDelete} />\n      </div> : ''\n    }\n    </>\n)\n}\n\nexport default Table;",["135","136"],"/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Table/TableHead.js",[],"/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Table/TableBody.js",[],"/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Forms/CreateEvent.js",["137"],"import {useState} from 'react';\nimport { toast } from 'react-toastify';\nimport {SuccesAlert, WarningAlert, ErrorAlert} from '../Alert/Alert'\nimport {CreateNewEvent} from '../../hooks/ApiRequest';\nimport { useSelector } from 'react-redux';\nimport {useDispatch} from 'react-redux';\nimport {fetchEventsByOrganizer, fetchEventsByStatus} from '../../store/actions'\n\nfunction CreateEvent({handleCreateForm}) {\n  const dispatch = useDispatch();\n  const [inputData, setInputData] = useState({\n    OrganizerId: null,\n    title: '',\n    date: '',\n    time: '00:00',\n    location: '',\n    capacity_regular: 0,\n    capacity_vip: 0,\n    capacity_vvip: 0,\n    price_regular: 0,\n    price_vip: 0,\n    price_vvip: 0,\n    event_preview: 'https://st4.depositphotos.com/17828278/24401/v/600/depositphotos_244011872-stock-illustration-image-vector-symbol-missing-available.jpg',\n    EventTypeId: 1\n  })\n  const [isAdmin] = useState(localStorage.getItem('isAdmin'));\n  const eventType = useSelector(state => state.eventReducer.eventsType);\n  console.log(inputData);\n  const [checkedType, setcheckedType] = useState({\n    regular: false,\n    vip: false,\n    vvip: false\n  })\n  const successNotif = (m) => {\n    toast.success(<SuccesAlert message={m}/>);\n  }\n  const errorNotif = (m) => {\n    toast.success(<ErrorAlert message={m}/>);\n  }\n  function handleCreateEvent () {\n    CreateNewEvent(inputData, checkedType, isAdmin)\n      .then((response)=>{\n        console.log(response);\n        handleCreateForm();\n        dispatch(fetchEventsByStatus());\n        dispatch(fetchEventsByOrganizer());\n        successNotif();\n      })\n      .catch((err)=>{\n        // console.log(err.response.data)\n        if(err.response.status === 400) {\n          for(let i = 0; i < err.response.data.message.length; i++){\n            errorNotif(`${err.response.data.message[i]}`);\n          }\n        } else {\n          errorNotif(`${err}`)\n        }\n      })\n  }\n  return (\n    <div className=\"sm:h-10 md:h-20 lg:h-screen flex items-center justify-center px-5 py-5\">\n      <div className=\"bg-gray-100 text-gray-500 rounded-3xl shadow-xl w-full overflow-hidden\" style={{maxWidth: 1000}}>\n        <div className=\"px-10 mt-2 flex flex-row justify-end items-center text-center\">\n          <div className=\"flex items-end\">\n            <button \n              className=\"text-red-400 hover:text-red-500 focus:outline-none\"\n              onClick={(e)=>{\n                e.preventDefault();\n                handleCreateForm();\n              }}\n              >\n              <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n            </button>\n          </div>\n        </div>\n        <div className=\"md:flex justify-center items-center w-full\">\n\n          {/* *********** LEFT SIDE FORM *************** */}\n          <div className=\"sm:w-full lg:w-1/2 px-5 md:px-10\">\n            <form>\n              <div className=\"flex -mx-3\">\n                <div className=\"flex justify-center w-full px-3 mb-2\">\n                  <h1 className=\"font-bold text-3xl text-gray-900\">Create New Event</h1>\n                </div>\n              </div>\n              { isAdmin === 'true' ? \n              <div className=\"flex -mx-3\">\n                <div className=\"w-full px-3 mb-2\">\n                  <label htmlFor=\"\" className=\"text-xs font-semibold px-1\">Organizer Name</label>\n                  <div className=\"flex\">\n                    <div className=\"w-10 z-10 pl-1 text-center pointer-events-none flex items-center justify-center\">\n                      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M21 13.255A23.931 23.931 0 0112 15c-3.183 0-6.22-.62-9-1.745M16 6V4a2 2 0 00-2-2h-4a2 2 0 00-2 2v2m4 6h.01M5 20h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"></path></svg>\n                    </div>\n                    <input \n                      type=\"text\" \n                      className=\"w-full -ml-10 pl-10 pr-3 py-2 rounded-lg border-2 border-gray-200 outline-none focus:border-indigo-500\" \n                      placeholder=\"\"\n                      />\n                  </div>\n                </div>\n              </div>\n              :\n              ''}\n              <div className=\"flex -mx-3\">\n                <div className=\"w-full px-3 mb-2\">\n                  <label htmlFor=\"\" className=\"text-xs font-semibold px-1\">Event Name</label>\n                  <div className=\"flex\">\n                    <div className=\"w-10 z-10 pl-1 text-center pointer-events-none flex items-center justify-center\">\n                    <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z\"></path></svg>\n                    </div>\n                    <input \n                      type=\"text\" \n                      className=\"w-full -ml-10 pl-10 pr-3 py-2 rounded-lg border-2 border-gray-200 outline-none focus:border-indigo-500\" \n                      value={inputData.title}\n                      onChange={(e)=>{\n                        e.preventDefault();\n                        setInputData({...inputData, title: e.target.value})\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex -mx-3\">\n                <div className=\"w-1/2 px-3 mb-2\">\n                  <label htmlFor=\"\" className=\"text-xs font-semibold px-1\">Date</label>\n                  <div className=\"flex\">\n                    <div className=\"w-10 z-10 pl-1 text-center pointer-events-none flex items-center justify-center\">\n                      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"></path></svg>\n                    </div>\n                    <input \n                      type=\"date\" \n                      className=\"w-full -ml-10 pl-10 pr-3 py-2 rounded-lg border-2 border-gray-200 outline-none focus:border-indigo-500\" \n                      value={inputData.date}\n                      onChange={(e)=>{\n                        e.preventDefault();\n                        setInputData({...inputData, date: e.target.value})\n                      }}/>\n                  </div>\n                </div>\n                <div className=\"w-1/2 pr-3 mb-2\">\n                  <label htmlFor=\"\" className=\"text-xs font-semibold px-1\">Time</label>\n                  <div className=\"flex\">\n                    <div className=\"w-10 z-10 pl-1 text-center pointer-events-none flex items-center justify-center\">\n                      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                    </div>\n                    <input \n                      type=\"time\" \n                      className=\"w-full -ml-10 pl-10 pr-3 py-2 rounded-lg border-2 border-gray-200 outline-none focus:border-indigo-500\" \n                      value={inputData.time}\n                      onChange={(e)=>{\n                        e.preventDefault();\n                        setInputData({...inputData, time: e.target.value})\n                      }}/>\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex -mx-3\">\n                <div className=\"flex justify-center w-full px-3 mb-2\">\n                  <img \n                    className=\"max-h-36\"\n                    src={inputData.event_preview}\n                    alt=\"preview\"\n                  ></img>\n                </div>\n              </div>\n              <div className=\"flex -mx-3\">\n                <div className=\"w-full px-3 mb-2\">\n                  <label htmlFor=\"\" className=\"text-xs font-semibold px-1\">Poster</label>\n                  <div className=\"flex\">\n                    <div className=\"w-10 z-10 pl-1 text-center pointer-events-none flex items-center justify-center\">\n                      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"></path></svg>\n                    </div>\n                    <input \n                      type=\"file\" \n                      className=\"w-full -ml-10 pl-10 pr-3 py-2 rounded-lg border-2 border-gray-200 outline-none focus:border-indigo-500\"\n                      onChange={(e)=>{\n                        const formdata = new FormData();\n                        formdata.append(\"image\", e.target.files[0])\n                        fetch(\"https://api.imgur.com/3/image/\",{\n                          method: \"post\",\n                          headers:{\n                            Authorization:\"Client-ID 5e4828f8131b686\"\n                          },\n                          body: formdata\n                        }).then(response =>{\n                          return response.json()\n                        }).then(data => {\n                          if(data.success){\n                            setInputData({...inputData, event_preview: data.data.link})\n                          } else {\n                            setInputData({...inputData, event_preview: \"https://st4.depositphotos.com/17828278/24401/v/600/depositphotos_244011872-stock-illustration-image-vector-symbol-missing-available.jpg\"})\n                          }\n                        }).catch(err =>{\n                          console.log('masuk ke error bos')\n                          console.log(err);\n                        })\n                      }} />\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n\n          {/* *********** RIGHT SIDE FORM *************** */}\n          <div className=\"sm:w-full lg:w-1/2 px-5 md:px-10\">\n            <form>\n              <div className=\"flex -mx-3\">\n                <div className=\"w-full px-3 mb-2\">\n                  <label htmlFor=\"\" className=\"text-xs font-semibold px-1\">Location</label>\n                  <div className=\"flex\">\n                    <div className=\"w-10 z-10 pl-1 text-center pointer-events-none flex items-center justify-center\">\n                      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"></path><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"></path></svg>\n                    </div>\n                    <input \n                      type=\"text\" \n                      className=\"w-full -ml-10 pl-10 pr-3 py-2 rounded-lg border-2 border-gray-200 outline-none focus:border-indigo-500\" \n                      value={inputData.location}\n                      onChange={(e)=>{\n                        e.preventDefault();\n                        setInputData({...inputData, location: e.target.value})\n                      }}/>\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex -mx-3\">\n                <div className=\"w-full\">\n                  <label htmlFor=\"\" className=\"text-xl font-semibold px-1\">Audience Type</label>\n                </div>\n              </div>\n              <div className=\"flex -mx-3\">\n                <div className=\"w-full\">\n                  <input \n                      type=\"checkbox\"\n                      className=\"ml-3\"\n                      checked={checkedType.regular}\n                      value={checkedType.regular}\n                      onChange={(e)=>{\n                        const newCheck = !checkedType.regular;\n                        if(!newCheck){\n                          setInputData({...inputData, price_regular: 0, capacity_regular: 0});\n                        }\n                        setcheckedType({...checkedType, regular: newCheck})\n                      }}\n                    ></input>\n                  <label htmlFor=\"\" className=\"text-lg font-semibold px-1\">Regular</label>\n                </div>\n              </div>\n              <div className=\"flex -mx-3\">\n                <div className=\"w-1/2 px-3 mb-2\">\n                  <label htmlFor=\"\" className=\"text-xs font-semibold px-1\">Ticket Price</label>\n                  <div className=\"flex flex-row\">\n                    <div className=\"w-10 z-10 pl-1 text-center pointer-events-none flex items-center justify-center\">\n                      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z\"></path></svg>\n                    </div>\n                    <input \n                      type=\"number\" \n                      min=\"0\" step=\"20000\" \n                      className=\"w-full -ml-10 pl-10 pr-3 py-2 rounded-lg border-2 border-gray-200 outline-none focus:border-indigo-500\" placeholder=\"\" \n                      value={inputData.price_regular}\n                      readOnly={!checkedType.regular}\n                      onChange={(e)=>{\n                        e.preventDefault();\n                        setInputData({...inputData, price_regular: e.target.value});\n                      }}\n                      />\n                  </div>\n                </div>\n                <div className=\"w-1/2 px-3 mb-2\">\n                  <label htmlFor=\"\" className=\"text-xs font-semibold px-1\">Regular Capacity</label>\n                  <div className=\"flex\">\n                    <div className=\"w-10 z-10 pl-1 text-center pointer-events-none flex items-center justify-center\">\n                      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                    </div>\n                    <input \n                      type=\"number\" \n                      min=\"0\" step=\"50\" \n                      className=\"w-full -ml-10 pl-10 pr-3 py-2 rounded-lg border-2 border-gray-200 outline-none focus:border-indigo-500\" placeholder=\"\" \n                      value={inputData.capacity_regular}\n                      readOnly={!checkedType.regular}\n                      onChange={(e)=>{\n                        e.preventDefault();\n                        setInputData({...inputData, capacity_regular: e.target.value});\n                      }}\n                      />\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex -mx-3\">\n                <div className=\"w-full\">\n                  <input \n                      type=\"checkbox\"\n                      className=\"ml-3\"\n                      checked={checkedType.vip}\n                      value={checkedType.vip}\n                      onChange={(e)=>{\n                        const newCheck = !checkedType.vip;\n                        if(!newCheck){\n                          setInputData({...inputData, price_vip: 0, capacity_vip: 0});\n                        }\n                        setcheckedType({...checkedType, vip: newCheck})\n                      }}\n                    ></input>\n                  <label htmlFor=\"\" className=\"text-lg font-semibold px-1\">VIP</label>\n                </div>\n              </div>\n              <div className=\"flex -mx-3\">\n                <div className=\"w-full px-3 mb-2\">\n                  <label htmlFor=\"\" className=\"text-xs font-semibold px-1\">VIP Ticket Price</label>\n                  <div className=\"flex\">\n                    <div className=\"w-10 z-10 pl-1 text-center pointer-events-none flex items-center justify-center\">\n                      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z\"></path></svg>\n                    </div>\n                    <input \n                      type=\"number\" \n                      min=\"0\" step=\"20000\"\n                      value={inputData.price_vip}\n                      readOnly={!checkedType.vip}\n                      className=\"w-full -ml-10 pl-10 pr-3 py-2 rounded-lg border-2 border-gray-200 outline-none focus:border-indigo-500\" \n                      onChange={(e)=>{\n                        e.preventDefault();\n                        setInputData({...inputData, price_vip: e.target.value});\n                      }}\n                      />\n                  </div>\n                </div>\n                <div className=\"w-full px-3 mb-2\">\n                  <label htmlFor=\"\" className=\"text-xs font-semibold px-1\">VIP Capacity</label>\n                  <div className=\"flex\">\n                    <div className=\"w-10 z-10 pl-1 text-center pointer-events-none flex items-center justify-center\">\n                      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                    </div>\n                    <input \n                      type=\"number\" \n                      min=\"0\" step=\"50\" \n                      className=\"w-full -ml-10 pl-10 pr-3 py-2 rounded-lg border-2 border-gray-200 outline-none focus:border-indigo-500\" \n                      value={inputData.capacity_vip}\n                      readOnly={!checkedType.vip}\n                      onChange={(e)=>{\n                        e.preventDefault();\n                        setInputData({...inputData, capacity_vip: e.target.value});\n                      }} />\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex -mx-3\">\n                <div className=\"w-full\">\n                  <input \n                      type=\"checkbox\"\n                      className=\"ml-3\"\n                      checked={checkedType.vvip}\n                      value={checkedType.vvip}\n                      onChange={(e)=>{\n                        const newCheck = !checkedType.vvip;\n                        if(!newCheck){\n                          setInputData({...inputData, price_vvip: 0, capacity_vvip: 0});\n                        }\n                        setcheckedType({...checkedType, vvip: newCheck})\n                      }}\n                    ></input>\n                  <label htmlFor=\"\" className=\"text-lg font-semibold px-1\">VVIP</label>\n                </div>\n              </div>\n              <div className=\"flex -mx-3\">\n                <div className=\"w-1/2 px-3 mb-2\">\n                  <label htmlFor=\"\" className=\"text-xs font-semibold px-1\">VVIP Ticket Price</label>\n                  <div className=\"flex\">\n                    <div className=\"w-10 z-10 pl-1 text-center pointer-events-none flex items-center justify-center\">\n                      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 5v2m0 4v2m0 4v2M5 5a2 2 0 00-2 2v3a2 2 0 110 4v3a2 2 0 002 2h14a2 2 0 002-2v-3a2 2 0 110-4V7a2 2 0 00-2-2H5z\"></path></svg>\n                    </div>\n                    <input \n                      type=\"number\" \n                      min=\"0\" step=\"20000\" \n                      value={inputData.price_vvip}\n                      readOnly={!checkedType.vvip}\n                      className=\"w-full -ml-10 pl-10 pr-3 py-2 rounded-lg border-2 border-gray-200 outline-none focus:border-indigo-500\"\n                      onChange={(e)=>{\n                        e.preventDefault();\n                        setInputData({...inputData, price_vvip: e.target.value});\n                      }}\n                      />\n                  </div>\n                </div>\n                <div className=\"w-1/2 px-3 mb-2\">\n                  <label htmlFor=\"\" className=\"text-xs font-semibold px-1\">VVIP Capacity</label>\n                  <div className=\"flex\">\n                    <div className=\"w-10 z-10 pl-1 text-center pointer-events-none flex items-center justify-center\">\n                      <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path></svg>\n                    </div>\n                    <input \n                      type=\"number\" \n                      min=\"0\" step=\"50\" \n                      className=\"w-full -ml-10 pl-10 pr-3 py-2 rounded-lg border-2 border-gray-200 outline-none focus:border-indigo-500\"\n                      value={inputData.capacity_vvip}\n                      readOnly={!checkedType.vvip}\n                      onChange={(e)=>{\n                        e.preventDefault();\n                        setInputData({...inputData, capacity_vvip: e.target.value});\n                      }}\n                      />\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex -mx-3\">\n                <div className=\"w-full px-3 mb-2\">\n                  <label htmlFor=\"\" className=\"text-xs font-semibold px-1\">Event Type</label>\n                  <div className=\"flex\">\n                    <div className=\"w-10 z-10 pl-1 text-center pointer-events-none flex items-center justify-center\">\n                    <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z\"></path></svg>\n                    </div>\n                    <select \n                      value={inputData.EventTypeId}\n                      className=\"w-full -ml-10 pl-10 pr-3 py-2 rounded-lg border-2 border-gray-200 outline-none focus:border-indigo-500\"\n                      onChange={(e)=>{\n                        setInputData({...inputData, EventTypeId: e.target.value})\n                      }}>\n                        {\n                          eventType.map(type => {\n                            return (\n                              <option value={type.id}>{type.name}</option>\n                            )\n                          })\n                        }\n                    </select>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n        <div className=\"w-full px-3 mb-5\">\n          <button\n            type=\"submit\"\n            className=\"block w-full max-w-xs mx-auto bg-indigo-500 hover:bg-indigo-700 focus:bg-indigo-700 text-white rounded-lg px-3 py-3 font-semibold\"\n            onClick={(e)=>{\n              e.preventDefault();\n              handleCreateEvent();\n            }}\n            >Create\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CreateEvent;","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Forms/EditEvent.js",[],"/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Modals/DeleteConfirmation.js",[],"/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Details/EventDetail.js",["138"],"/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/MyEvent/MyEvent.js",["139"],"import TableEvent from './TableEvent';\nimport {useState, useEffect} from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {useHistory} from 'react-router-dom';\nimport CreateEvent from '../Forms/CreateEvent';\nimport Loader from '../Modals/Loader';\nimport { fetchEventsByOrganizer } from '../../store/actions';\n\n\nfunction MyEvent ({loggedIn}) {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  useEffect(()=>{\n    if(!loggedIn){\n      history.push('/login');\n    }\n  }, [loggedIn, history]);\n\n  useEffect(()=>{\n    dispatch(fetchEventsByOrganizer());\n  }, [])\n\n  const loading = useSelector(state => state.eventReducer.loading);\n  console.log(loading, 'Ini loadingnya');\n  const myEvent = useSelector(state => state.eventReducer.eventsByOrganizer);\n  const [selectedEvents, setSelectedEvents] = useState(null);\n  function handleSelectedEvents (selected) {\n    if(selectedEvents === selected) {\n      setSelectedEvents(null);\n    } else {\n      setSelectedEvents(selected)\n    }\n  }\n  function renderSelected (selectedStatus) {\n    for(let i = 0; i < myEvent.length; i++){\n      if(myEvent[i].name === selectedStatus){\n        const listSelected = [myEvent[i]]\n        console.log(listSelected, 'Ini di select')\n        return (\n          <div className=\"flex-grow overflow-auto\">\n            <TableEvent \n              myEvent={listSelected}/>\n          </div>\n        )\n      }\n    }\n    return (\n      <div className=\"flex-grow overflow-auto\">\n        <TableEvent \n          myEvent={myEvent}/>\n      </div>\n    )\n  }\n\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  function handleCreateForm(){\n    setShowCreateForm(!showCreateForm);\n  }\n  console.log(myEvent);\n  if(loading) {\n    return (\n      <div className=\"flex flex-col h-screen w-4/5 bg-gray-900\">\n        <Loader />\n      </div>\n    )\n  } \n  else {\n    return (\n      <div className=\"flex flex-col h-screen w-4/5 bg-gray-900\">\n        <div className=\"flex flex-row justify-between\">\n          <div className=\"flex\">\n            <div className=\"m-3\">\n              <button \n                className=\"bg-white text-gray-800 font-bold focus:outline-none rounded border-b-2 border-indigo-500 hover:border-indigo-600 hover:bg-indigo-500 hover:text-white shadow-md py-2 px-6 inline-flex items-center\"\n                onClick={(e)=>{\n                  e.preventDefault();\n                  handleSelectedEvents('active')\n                }}\n                >\n                <span className=\"mr-2\">Ongoing</span>\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5.636 18.364a9 9 0 010-12.728m12.728 0a9 9 0 010 12.728m-9.9-2.829a5 5 0 010-7.07m7.072 0a5 5 0 010 7.07M13 12a1 1 0 11-2 0 1 1 0 012 0z\"></path>\n                </svg>\n              </button>\n            </div>\n            <div className=\"m-3\">\n              <button \n                className=\"bg-white text-gray-800 font-bold focus:outline-none rounded border-b-2 border-indigo-500 hover:border-indigo-600 hover:bg-indigo-500 hover:text-white shadow-md py-2 px-6 inline-flex items-center\"\n                onClick={(e)=>{\n                  e.preventDefault();\n                  handleSelectedEvents('non-active')\n                }}\n                >\n                <span className=\"mr-2\">Finished</span>\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M18.364 5.636a9 9 0 010 12.728m0 0l-2.829-2.829m2.829 2.829L21 21M15.536 8.464a5 5 0 010 7.072m0 0l-2.829-2.829m-4.243 2.829a4.978 4.978 0 01-1.414-2.83m-1.414 5.658a9 9 0 01-2.167-9.238m7.824 2.167a1 1 0 111.414 1.414m-1.414-1.414L3 3m8.293 8.293l1.414 1.414\"></path>\n                </svg>\n              </button>\n            </div>\n            <div className=\"m-3\">\n              <button \n                className=\"bg-white text-gray-800 font-bold focus:outline-none rounded border-b-2 border-indigo-500 hover:border-indigo-600 hover:bg-indigo-500 hover:text-white shadow-md py-2 px-6 inline-flex items-center\"\n                onClick={(e)=>{\n                  e.preventDefault();\n                  handleSelectedEvents('cancelled')\n                }}\n                >\n                <span className=\"mr-2\">Canceled</span>\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 10a1 1 0 011-1h4a1 1 0 011 1v4a1 1 0 01-1 1h-4a1 1 0 01-1-1v-4z\"></path>\n                </svg>\n              </button>\n            </div>\n          </div>\n          <div className=\"flex\">\n            <div className=\"m-3\">\n              <button \n                className=\"bg-white text-gray-800 font-bold focus:outline-none rounded border-b-2 border-indigo-500 hover:border-indigo-600 hover:bg-indigo-500 hover:text-white shadow-md py-2 px-6 inline-flex items-center\"\n                onClick={(e)=>{\n                  e.preventDefault();\n                  handleCreateForm();\n                }}\n                >\n                <span className=\"mr-2\">Create New Event</span>\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n        {myEvent.length ? renderSelected(selectedEvents) : ''}\n        {\n          showCreateForm ? \n          <div className=\"bg-black bg-opacity-50 absolute inset-0 flex justify-center items center\">\n            <CreateEvent handleCreateForm={handleCreateForm}/>\n          </div> : ''\n        }\n      </div>\n    )\n  }\n}\n\nexport default MyEvent;","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/MyEvent/TableEvent.js",[],"/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Banner/Banner.js",["140"],"import {useHistory} from 'react-router-dom';\nimport {useEffect, useState} from 'react';\nimport DeleteBannerConfirmation from '../Modals/DeleteBannerConfirmation'\nimport BannerList from './BannerList';\nimport EditBanner from '../Forms/EditBanner';\nimport AddBanner from '../Forms/AddBanner';\nimport { useSelector } from 'react-redux';\nimport {useDispatch} from 'react-redux';\nimport {fetchBanner} from '../../store/actions';\nimport Loader from '../Modals/Loader';\n\nfunction Banner ({loggedIn}) {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  useEffect(()=>{\n    if(localStorage.getItem('access_token')){\n      if(localStorage.getItem('isAdmin') === 'false') {\n        history.push('/');\n      }\n    }\n  }, [loggedIn, history]);\n\n  useEffect(()=>{\n    dispatch(fetchBanner());\n  }, [])\n\n\n  const [toDelete, setToDelete] = useState(null);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  function handleDelete(value = null){\n    setShowDeleteModal(!showDeleteModal);\n    setToDelete(value);\n  }\n\n  const [toEdit, setToEdit] = useState(null);\n  const [showEditBanner, setShowEditBanner] = useState(false);\n  function handleEditBanner(value = null){\n    setShowEditBanner(!showEditBanner);\n    setToEdit(value);\n  }\n\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  function handleAddForm(){\n    setShowCreateForm(!showCreateForm);\n  } \n\n  const banner = useSelector(state => state.bannerReducer.banners);\n  const loading = useSelector(state => state.bannerReducer.loading);\n\n  if(loading) {\n    return (\n      <div className=\"flex flex-col h-screen w-4/5 bg-gray-900\">\n        <Loader />\n      </div>\n    )\n  }\n  return (\n    <div className=\"flex flex-col h-screen w-4/5 bg-gray-900\">\n      <div className=\"flex justify-end\">\n        <div className=\"m-3\">\n          <button \n            className=\"bg-white text-gray-800 font-bold focus:outline-none rounded border-b-2 border-indigo-500 hover:border-indigo-600 hover:bg-indigo-500 hover:text-white shadow-md py-2 px-6 inline-flex items-center\"\n            onClick={(e)=>{\n              e.preventDefault();\n              handleAddForm();\n            }}\n            >\n            <span className=\"mr-2\">Add New Banner</span>\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n            </svg>\n          </button>\n         </div>\n      </div>\n      <div className=\"flex-grow overflow-auto\">\n        <table class=\"relative w-full\">\n          <thead>\n            <tr>\n              <th class=\"w-2/4 sticky top-0 px-6 py-3 text-gray-100 bg-gray-700\">Image</th>\n              <th class=\"w-1/4 sticky top-0 px-6 py-3 text-gray-100 bg-gray-700\">Detail</th>\n              <th class=\"w-1/4 sticky top-0 px-6 py-3 text-gray-100 bg-gray-700\"></th>\n            </tr>\n          </thead>\n          <tbody class=\"divide-y bg-gray-100\">\n            {\n              banner.map(banner => {\n                return (\n                  <BannerList \n                    key={banner.id} \n                    banner={banner}\n                    handleEditBanner={handleEditBanner}\n                    handleDelete={handleDelete} />\n                )\n              })\n            }\n          </tbody>\n        </table>\n      </div>\n      {\n        showEditBanner ? \n        <div className=\"bg-black bg-opacity-50 absolute inset-0 flex justify-center items center\">\n          <EditBanner \n            handleEditBanner={handleEditBanner} \n            populateData={toEdit}\n            />\n        </div> : ''\n      }\n      {\n        showDeleteModal ?\n        <div className=\"bg-black bg-opacity-50 absolute inset-0 flex justify-center items center\">\n          <DeleteBannerConfirmation handleDelete={handleDelete} id={toDelete} />\n        </div> : ''\n      }\n      {\n        showCreateForm ? \n        <div className=\"bg-black bg-opacity-50 absolute inset-0 flex justify-center items center\">\n          <AddBanner handleAddForm={handleAddForm}/>\n        </div> : ''\n      }\n    </div>\n  )\n}\n\nexport default Banner;","/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Forms/AddBanner.js",[],"/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Forms/EditBanner.js",[],"/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Banner/BannerList.js",[],"/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Alert/Alert.js",[],"/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/store/actions.js",[],"/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/store/index.js",[],"/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/store/reducers/banners.js",[],"/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/store/reducers/events.js",[],"/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/hooks/ApiRequest.js",[],"/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Forms/NewEventType.js",[],"/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Modals/Loader.js",[],"/home/ruuri/Hacktiv8/myProject/finalProject/client/cms/src/components/Modals/DeleteBannerConfirmation.js",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":28,"column":6,"nodeType":"147","endLine":28,"endColumn":8,"suggestions":"148"},{"ruleId":"145","severity":1,"message":"146","line":22,"column":6,"nodeType":"147","endLine":22,"endColumn":8,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":20,"column":21,"nodeType":"152","messageId":"153","endLine":20,"endColumn":33},{"ruleId":"141","replacedBy":"154"},{"ruleId":"143","replacedBy":"155"},{"ruleId":"150","severity":1,"message":"156","line":3,"column":22,"nodeType":"152","messageId":"153","endLine":3,"endColumn":34},{"ruleId":"145","severity":1,"message":"157","line":20,"column":6,"nodeType":"147","endLine":20,"endColumn":8,"suggestions":"158"},{"ruleId":"145","severity":1,"message":"146","line":21,"column":6,"nodeType":"147","endLine":21,"endColumn":8,"suggestions":"159"},{"ruleId":"145","severity":1,"message":"146","line":26,"column":6,"nodeType":"147","endLine":26,"endColumn":8,"suggestions":"160"},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["163"],["164"],"no-unused-vars","'setOrganizer' is assigned a value but never used.","Identifier","unusedVar",["161"],["162"],"'WarningAlert' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["165"],["166"],["167"],"no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},{"desc":"168","fix":"170"},{"desc":"171","fix":"172"},{"desc":"168","fix":"173"},{"desc":"168","fix":"174"},"Update the dependencies array to be: [dispatch]",{"range":"175","text":"176"},{"range":"177","text":"176"},"Update the dependencies array to be: [id]",{"range":"178","text":"179"},{"range":"180","text":"176"},{"range":"181","text":"176"},[903,905],"[dispatch]",[600,602],[554,556],"[id]",[594,596],[803,805]]